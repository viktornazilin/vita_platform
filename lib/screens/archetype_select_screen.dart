import 'package:flutter/material.dart';
import '../services/user_service.dart';

class ArchetypeSelectScreen extends StatelessWidget {
  final UserService userService;
  const ArchetypeSelectScreen({super.key, required this.userService});

  @override
  Widget build(BuildContext context) {
    final archetypes = <_Archetype>[
      _Archetype(key: 'game',     title: '–ò–≥—Ä–æ–≤–æ–π –º–∏—Ä',      emoji: 'üéÆ', desc: 'RPG/–∫–∏–±–µ—Ä–ø–∞–Ω–∫ —Å—Ç–∏–ª—å'),
      _Archetype(key: 'sport',    title: '–°–ø–æ—Ä—Ç',            emoji: 'üèÜ', desc: '–î–∏–Ω–∞–º–∏–∫–∞ –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞'),
      _Archetype(key: 'business', title: '–ë–∏–∑–Ω–µ—Å',           emoji: 'üíº', desc: '–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∏ —Ä–æ—Å—Ç'),
      _Archetype(key: 'creative', title: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',       emoji: 'üé≠', desc: '–°—Ü–µ–Ω–∞ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ'),
      _Archetype(key: 'travel',   title: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',      emoji: 'üåç', desc: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –º–∏—Ä–∞'),
      _Archetype(key: 'science',  title: '–ù–∞—É–∫–∞ –∏ –∑–Ω–∞–Ω–∏—è',   emoji: 'üìö', desc: '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –∏ –æ–±—É—á–µ–Ω–∏–µ'),
      _Archetype(key: 'balance',  title: '–ë–∞–ª–∞–Ω—Å/–ó–û–ñ',       emoji: 'üå±', desc: '–ì–∞—Ä–º–æ–Ω–∏—è –∏ —ç–Ω–µ—Ä–≥–∏—è'),
      _Archetype(key: 'family',   title: '–°–µ–º—å—è –∏ –∑–∞–±–æ—Ç–∞',   emoji: '‚ù§Ô∏è', desc: '–¢—ë–ø–ª—ã–µ —Å–≤—è–∑–∏'),
    ];

    return Scaffold(
      appBar: AppBar(title: const Text('–í—ã–±–æ—Ä —Å—Ç–∏–ª—è –≥–µ—Ä–æ—è')),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          children: [
            Text(
              '–ö–µ–º –±—ã —Ç—ã –±—ã–ª –≤ —ç—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–∏?',
              style: Theme.of(context).textTheme.titleLarge,
            ),
            const SizedBox(height: 12),
            Expanded(
              child: GridView.builder(
                itemCount: archetypes.length,
                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 2, mainAxisSpacing: 12, crossAxisSpacing: 12, childAspectRatio: 1.1,
                ),
                itemBuilder: (_, i) => _ArchetypeCard(
                  data: archetypes[i],
                  onTap: () async {
                    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä
                    await userService.saveArchetype(archetypes[i].key);
                    // —Å—Ä–∞–∑—É –≤–µ–¥—ë–º –Ω–∞ –æ–ø—Ä–æ—Å–Ω–∏–∫ (–±–µ–∑ –ª–æ–≥–∏–Ω–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
                    // ignore: use_build_context_synchronously
                    Navigator.of(context).pushReplacementNamed('/onboarding');
                  },
                ),
              ),
            ),
            const SizedBox(height: 8),
            Text(
              '–û—Ç —Ç–≤–æ–µ–≥–æ –≤—ã–±–æ—Ä–∞ –∑–∞–≤–∏—Å–∏—Ç —Ç–æ–Ω –æ–±—â–µ–Ω–∏—è, –Ω–æ —Ü–µ–ª—å –æ–¥–Ω–∞ ‚Äî –±–∞–ª–∞–Ω—Å —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.',
              textAlign: TextAlign.center,
            ),
          ],
        ),
      ),
    );
  }
}

class _Archetype {
  final String key;
  final String title;
  final String emoji;
  final String desc;
  const _Archetype({required this.key, required this.title, required this.emoji, required this.desc});
}

class _ArchetypeCard extends StatelessWidget {
  final _Archetype data;
  final VoidCallback onTap;
  const _ArchetypeCard({required this.data, required this.onTap});

  @override
  Widget build(BuildContext context) {
    return InkWell(
      borderRadius: BorderRadius.circular(20),
      onTap: onTap,
      child: Ink(
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular(20),
          boxShadow: const [
            BoxShadow(color: Color(0x11000000), blurRadius: 12, offset: Offset(0, 6)),
          ],
        ),
        child: Padding(
          padding: const EdgeInsets.all(16),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(data.emoji, style: const TextStyle(fontSize: 40)),
              const SizedBox(height: 8),
              Text(data.title, style: const TextStyle(fontWeight: FontWeight.w700)),
              const SizedBox(height: 6),
              Opacity(opacity: .7, child: Text(data.desc, textAlign: TextAlign.center)),
            ],
          ),
        ),
      ),
    );
  }
}
